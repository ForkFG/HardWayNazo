{"version":3,"sources":["main.js"],"names":["NUMBER","require","charCodeAt","cryptojs","qs","lv","decode","elt","path","title","$body","PLUS_URL_SAFE","$main","SLASH","$hint","SLASH_URL_SAFE","$play","esc","code","replace","UPPER","n","LOWER","exports","toByteArray","tw","b","length","len","b64","placeHolders","m","charAt","appendTo","$t","arr","Arr","l","$l","html","push","v","tmp","i","setTimeout","dft","fromByteArray","temp","decrypt","extraBytes","uint8","encode","num","toString","enc","console","o","f","crypto","output","2","$in","module","base64","ieee754","debug","assign","INSPECT_MAX_BYTES"],"mappings":"2hBACCA,EAAKC,IAAQC,WADd,GAEAC,EAAQ,IAAGF,WAAQ,GACnBG,EAAOH,IAAQC,WAHf,G,oBAKIG,EAAkB,IAAAH,WAAtB,GAEA,SAEMI,EAAQC,GACdC,EAAID,EAAAL,WAAA,GAHJ,OAPAO,IACMR,GAcNS,IAAUC,EAVJ,GAENC,IACKC,GAMLC,IAYKC,EACLC,GAAAA,EAAShB,G,EAK8BiB,EAAAjB,EAAA,GAAAkB,EAAAC,EAE7B,GAAA,GALVD,EAAAE,EAAA,GAOCD,EAASE,EANHH,EAAAI,EAAA,GAKUJ,EAAAI,EAAA,QALV,EAiHNC,EAAKC,YA1GkCH,SAAAA,GAAAA,IAFvBI,EAEuBJ,EACvC,GAAA,EAAAK,EAAAC,OAAA,E,kEAHgB,IAAAC,EAAAC,EAAAF,OAAAG,EAAAC,MAAAF,EAAAG,OAAAJ,EAAA,GAAA,EAAAK,MAAAC,EAAAF,OAAAJ,EAAA,GAAA,EAAA,EAAAO,EAAA,IAAAC,EAAA,EAAAP,EAAAF,OAAA,EAAAG,GAAAO,EAAAC,EAAAR,EAAAS,EAAAZ,OAAA,EAAAE,EAAAF,OAMfD,EAAAA,EAUG,SAAAc,EAAAC,GAPHH,EAAAA,KAAAG,E,mBATeD,GAAA,UAAAE,EAAApC,EAAAqC,EAAAX,OAAAK,KAAAV,GAAArB,EAAAuB,EAAAG,OAAAW,EAAA,KAAA,GAAArC,EAAAuB,EAAAG,OAAAW,EAAA,KAAA,EAAArC,EAAAuB,EAAAG,OAAAW,EAAA,OAAA,IAAAH,GAAA,MAAAE,IAAA,GAAAF,EAUsBI,IAVtBF,G,OAGhB,GAAAZ,EAQGU,EAAA,KARHE,EAAApC,EAAAuB,EAAAG,OAAAW,KAAA,EAAArC,EAAAuB,EAAAG,OAAAW,EAAA,KAAA,IADuCtB,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,EAAAA,OAAAA,KAAAA,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,OAAAA,EAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,IAAAA,I,GA2GtCwB,EAAGC,c,YApGH,IAAAnB,EACCoB,EAAApB,EASIqB,EASNC,EAAYC,EAAZvB,OAAA,E,KAlBE,SAAAwB,EAAAC,GAAA,M,mEAAApB,OAAAoB,GAwBC,IAzBFT,EALDU,EAAAA,EAAAlD,EAAAmD,OAKCL,EAAAN,EAAAhB,EAAAgB,GAAA,EALgBY,GAAAA,EAAAZ,IAAA,KAAAO,EAAAP,EAAA,IAAA,GAAAO,EAAAP,EAAA,GAgBhBa,GAcML,GAfDH,EACLD,IAcQ,GAAA,IAAAI,EAAAC,GAAA,GAAA,IAAAD,EAAAC,GAAA,EAAA,IAAAD,EAAA,GAAAC,G,UAlCO,KAAAK,EA4CdpD,GAAGqD,GAlDNrD,EAAAmD,EAAAN,EAAAvB,OAAA,KAkDG,GArBHgC,GAAAR,EAAAJ,GAAA,EAAA,IAbGY,GAqCO,KApBV,MACC,KAAA,EACAtD,GAAA8C,GAqBC9C,GAAA6C,EAAAA,EAAAvB,OAAA,IAAA,GAAAuB,EAAAA,EAAAvB,OAAA,KArBD,IACCgC,GAAAR,EAAAJ,GAAA,EAAA,IAAAY,GAAAR,EAAAJ,GAAA,EAAA,I,OA6F+B5C,OAAAA,G,iCAZ/B,IAAAyD,EAAMC,CAAAA,SAAO5D,EAAA6D,EAAc7B,GAKb,IAAA8B,EACR9D,EAAA,aAEN+D,EAAA/D,EAAA,mnI,WAGFsB,EAAI0C,WACIC,EAAiB7D,EAAF8D,kBAAA,GAAM/D,EAAAA,SAAN","file":"bundle.js","sourcesContent":["const\n$\t\t\t= require(\"jquery\"),\ncryptojs\t= require(\"crypto-js\"),\nqs\t\t\t= require(\"qs\")\n\nlet lv\t= JSON.parse($(\"nazo\").html())\n\nconst\ndebug\t= location.hostname == \"localhost\",\nprompt\t= debug ? \"%\" : \"#\",\npath\t= location.pathname.slice(debug ? 1 : 13)\n\t.replace(/\\..+?$/, \"\") ?? \"index\",\ntitle\t= lv.id + prompt + \" \" + path\n\nconst\n$body\t= $(\"body\"),\n$title\t= $(`<title>${title} | HardWayNazo</title>`).appendTo($(\"head\")),\n$main\t= $(`\n<main>\n\t<h1>${title}</h1>\n\t<p class=\"hint\"></p>\n\t<p class=\"note\"></p>\n\t<p class=\"play\"></p>\n</main>\n`).appendTo($body),\n$hint\t= $(\".hint\"),\n$note\t= $(\".note\"),\n$play\t= $(\".play\")\n\nconst\nesc = s => s\n\t.replace(/ /g, \"&nbsp;\")\n\t.replace(/\\^\\^(#[\\da-f]+);(.+?)\\^\\^/, (_, color, txt) =>\n\t\t`<span style=\"color: ${color}\">${txt}</span>`)\n\t.replace(/\\*\\*(.+?)\\*\\*/g, \"<b>$1</b>\"),\nout = (n, $t) => {\n\tif (! lv[n]) return\n\tconst { text: t, typewriter: tw } = lv[n]\n\tlet c = 0, b = 0\n\tfor (let l of t) {\n\t\tl += \" \"\n\t\tlet m = l[0] == \"!\",\n\t\t\t$l = $(m ? `<code></code>` : `<p></p>`).appendTo($t)\n\t\tif (m) l = l.slice(1)\n\t\tif (tw)\n\t\t\tfor (let i = 0; i < l.length; i ++) setTimeout(() => {\n\t\t\t\tlet s = $l.html()\n\t\t\t\tif (l.slice(i - 1, i + 1) == \"**\") b ++\n\t\t\t\telse if (b == 2) {\n\t\t\t\t\tb = 0\n\t\t\t\t\ts = esc(s)\n\t\t\t\t}\n\t\t\t\t$l.html(s + l[i])\n\t\t\t}, ++ c * tw)\n\t\telse $l.html(esc(l))\n\t}\n}\n\nconst\nc = lv.crypto ?? {},\nq = Object.entries(qs.parse(location.search.slice(1)))\n\nif (q.length) {\n\tconst t = c[q[0][0]]\n\tif (typeof t === \"string\") {\n\t\tlet f = true, d, o\n\t\ttry {\n\t\t\td = cryptojs.AES.decrypt(\n\t\t\t\tt, cryptojs.enc.Utf8.parse(q[0][1]),\n\t\t\t\t{ iv: { words: [ 0, 0, 0, 0 ], sigBytes: 16 } }\n\t\t\t).toString(cryptojs.enc.Utf8)\n\t\t\tconsole.log(d)\n\t\t\to = JSON.parse(d)\n\t\t}\n\t\tcatch {\n\t\t\tf = false\n\t\t}\n\t\tif (f) {\n\t\t\tlv = o\n\t\t\tlv.crypto = c\n\t\t}\n\t}\n\telse if (typeof t === \"object\") { \n\t// Note: Pass when `t === null`.\n\t// Debug: Directly access `.c_html` files.\n\t\tlv = t\n\t\tlv.crypto = c\n\t}\n}\n\n$body.append(`\n<style>\nh1 {\n\tfont-size: 70px;\n\ttext-align: center;\n}\np {\n\tfont-family: serif;\n}\ncode {\n\tdisplay: block;\n\tfont-family:\n\t\t'Fira Code', consolas,\n\t\t'Courier New', Courier, monospace;\n}\n.hint {\n\tfont-size: 26px !important;\n\ttext-align: ${ lv.hint.align ?? \"center\" };\n}\n.note {\n\tposition: fixed;\n\tbottom: 40px;\n\tright: 5px;\n\twidth: 100%;\n\n\tfont-size: 20px !important;\n\ttext-align: ${ lv.note?.align ?? \"right\" };\n}\n.play {\n\ttext-align: center;\n}\n.play input, .play button {\n\tmargin: 0 5px;\n\n\tbackground-color: white;\n\tfont-size: 30px;\n\ttext-align: center;\n\n\tborder: 2px solid black;\n\tborder-radius: 5px;\n\toutline: none;\n}\n.play input:focus, .play button:active, .play button:hover {\n\tborder-style: dashed;\n}\n</style>\n`)\n\nout(\"hint\", $hint)\nout(\"note\", $note)\n\nlet dft = lv.ascend.default ?? \"\"\nswitch (lv.ascend.method) {\n\tcase \"crypto\":\n\t\tdft += `?${ lv.ascend.token }=`\n\tcase \"input\":\n\t\tconst $in = $(`<input />`).appendTo($play).val(dft)\n\t\tconst jump = f => {\n\t\t\tif (f) location.href = (debug ? \"/\" : \"/HardWayNazo/\") + $in.val()\n\t\t}\n\t\tif (lv.ascend.answer) $in\n\t\t\t.on(\"input\", () => jump($in.val() == lv.ascend.answer))\n\t\telse $(`<button>Nazo!</button>`).appendTo($play)\n\t\t\t.on(\"click\", jump)\n\t\tbreak\n}\n\nif (debug)\n\tObject.assign(window, { lv, qs, cryptojs })\n\n"]}